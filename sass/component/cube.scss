$CubeWidth: 25rem;
$halfCube: $CubeWidth /2;

$CubeWidthSmall: 20rem;
$halfCubeSmall: $CubeWidthSmall /2;

@mixin cubeHightWidth {
  width: $CubeWidth;
  height: $CubeWidth;

  @include respond(v800) {
    width: $CubeWidthSmall;
    height: $CubeWidthSmall;
  }
}

.cube{
  @include centerPage;
  perspective: 100rem;
  perspective-origin: 50% 10rem;
  
  &__container{
    position:relative;
    margin: 0 auto;
    transform-style:preserve-3d;
    animation: spin 16s infinite linear;
    @include cubeHightWidth();

    & div{
      position:absolute;
      background-color: rgba($darkBlue, .8);
      @include cubeHightWidth();

      & span{
        @include centerPage;
        opacity: 1;
        & svg{
          height: 10rem;
          width: 10rem;
        }
        
      }

      &:nth-child(1){
        transform: translateZ($halfCube);
        @include respond(v800) {
          transform: translateZ($halfCubeSmall);
        }
      }
      
      &:nth-child(2){
        transform: rotateX(180deg) translateZ($halfCube);
        @include respond(v800) {
          transform: rotateX(180deg) translateZ($halfCubeSmall);
        }
      }
      
      &:nth-child(3){
        transform: rotateY(-90deg) translateZ($halfCube);
        @include respond(v800) {
          transform: rotateY(-90deg) translateZ($halfCubeSmall);
        }
      }
      
      &:nth-child(4){
        transform:rotateY(90deg) translateZ($halfCube);
        @include respond(v800) {
          transform:rotateY(90deg) translateZ($halfCubeSmall);
        }
      }
      
      &:nth-child(5){
        transform: rotateX(90deg) translateZ($halfCube);
        @include respond(v800) {
          transform: rotateX(90deg) translateZ($halfCubeSmall);
        }
      }
      
      &:nth-child(6){
        transform:rotateX(-90deg) translateZ($halfCube);
        @include respond(v800) {
          transform:rotateX(-90deg) translateZ($halfCubeSmall);
        }
      }
      
    }

  }
}

@keyframes spin {
  
  from { transform: rotateX(0) rotateZ(0deg) rotateZ(0deg); }
  to { transform: rotateX(360deg) rotateZ(360deg) rotateZ(360deg);  }
}